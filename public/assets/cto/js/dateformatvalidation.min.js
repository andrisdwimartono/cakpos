jQuery.validator.addMethod(
	"dateFormat_1",
	function(value, element) {
		var check = false;
		if(value.match(/^(\d{1,2})\/(\d{1,2})\/(\d{4})$/)){
			var adata = value.split('/');
			var dd = parseInt(adata[0],10);
			var mm = parseInt(adata[1],10);
			var yyyy = parseInt(adata[2],10);
			var xdata = new Date(yyyy,mm-1,dd);
			if ( ( xdata.getFullYear() === yyyy ) && ( xdata.getMonth () === mm - 1 ) && ( xdata.getDate() === dd ) ) {
				check = true;
			}else {
				check = false;
			}
		} else {
			check = false;
		}
		return this.optional(element) || check;
	},
	"Wrong date format"
);
jQuery.validator.addMethod(
	"dateFormat_2",
	function(value, element) {
		var check = false;
		if(value.match(/^(\d{1,2})\-(\d{1,2})\-(\d{4})$/)){
			var adata = value.split('-');
			var dd = parseInt(adata[0],10);
			var mm = parseInt(adata[1],10);
			var yyyy = parseInt(adata[2],10);
			var xdata = new Date(yyyy,mm-1,dd);
			if ( ( xdata.getFullYear() === yyyy ) && ( xdata.getMonth () === mm - 1 ) && ( xdata.getDate() === dd ) ) {
				check = true;
			}else {
				check = false;
			}
		} else {
			check = false;
		}
		return this.optional(element) || check;
	},
	"Wrong date format"
);
jQuery.validator.addMethod(
	"dateFormat_3",
	function(value, element) {
		var check = false;
		if(value.match(/^(\d{1,2})\/(\d{1,2})\/(\d{4})$/)){
			var adata = value.split('/');
			var dd = parseInt(adata[1],10);
			var mm = parseInt(adata[0],10);
			var yyyy = parseInt(adata[2],10);
			var xdata = new Date(yyyy,mm-1,dd);
			if ( ( xdata.getFullYear() === yyyy ) && ( xdata.getMonth () === mm - 1 ) && ( xdata.getDate() === dd ) ) {
				check = true;
			}else {
				check = false;
			}
		} else {
			check = false;
		}
		return this.optional(element) || check;
	},
	"Wrong date format"
);
jQuery.validator.addMethod(
	"dateFormat_4",
	function(value, element) {
		var check = false;
		if(value.match(/^(\d{1,2})\-(\d{1,2})\-(\d{4})$/)){
			var adata = value.split('-');
			var dd = parseInt(adata[1],10);
			var mm = parseInt(adata[0],10);
			var yyyy = parseInt(adata[2],10);
			var xdata = new Date(yyyy,mm-1,dd);
			if ( ( xdata.getFullYear() === yyyy ) && ( xdata.getMonth () === mm - 1 ) && ( xdata.getDate() === dd ) ) {
				check = true;
			}else {
				check = false;
			}
		} else {
			check = false;
		}
		return this.optional(element) || check;
	},
	"Wrong date format"
);
jQuery.validator.addMethod(
	"dateFormat_5",
	function(value, element) {
		var check = false;
		if(value.match(/^(\d{4})\/(\d{1,2})\/(\d{1,2})$/)){
			var adata = value.split('/');
			var dd = parseInt(adata[2],10);
			var mm = parseInt(adata[1],10);
			var yyyy = parseInt(adata[0],10);
			var xdata = new Date(yyyy,mm-1,dd);
			if ( ( xdata.getFullYear() === yyyy ) && ( xdata.getMonth () === mm - 1 ) && ( xdata.getDate() === dd ) ) {
				check = true;
			}else {
				check = false;
			}
		} else {
			check = false;
		}
		return this.optional(element) || check;
	},
	"Wrong date format"
);
jQuery.validator.addMethod(
	"dateFormat_6",
	function(value, element) {
		var check = false;
		if(value.match(/^(\d{4})\-(\d{1,2})\-(\d{1,2})$/)){
			var adata = value.split('-');
			var dd = parseInt(adata[2],10);
			var mm = parseInt(adata[1],10);
			var yyyy = parseInt(adata[0],10);
			var xdata = new Date(yyyy,mm-1,dd);
			if ( ( xdata.getFullYear() === yyyy ) && ( xdata.getMonth () === mm - 1 ) && ( xdata.getDate() === dd ) ) {
				check = true;
			}else {
				check = false;
			}
		} else {
			check = false;
		}
		return this.optional(element) || check;
	},
	"Wrong date format"
);
jQuery.validator.addMethod(
	"datetimeFormat_1",
	function(value, element) {
		var check = false;
		if(value.match(/^(\d{1,2})\/(\d{1,2})\/(\d{4}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/)){
			var bdata = value.split(' ');
			var cdata = bdata[1].split(':');
			var timeformat = true;
			if(parseInt(cdata[0],10) < 0 || parseInt(cdata[0],10) > 23){
				timeformat = false;
			}
			if(parseInt(cdata[1],10) < 0 || parseInt(cdata[1],10) > 59){
				timeformat = false;
			}
			if(parseInt(cdata[2],10) < 0 || parseInt(cdata[2],10) > 59){
				timeformat = false;
			}
			var adata = bdata[0].split('/');
			var dd = parseInt(adata[0],10);
			var mm = parseInt(adata[1],10);
			var yyyy = parseInt(adata[2],10);
			var xdata = new Date(yyyy,mm-1,dd);
			if ( ( xdata.getFullYear() === yyyy ) && ( xdata.getMonth () === mm - 1 ) && ( xdata.getDate() === dd ) && timeformat) {
				check = true;
			}else {
				check = false;
			}
		} else {
			check = false;
		}
		return this.optional(element) || check;
	},
	"Wrong datetime format"
);
jQuery.validator.addMethod(
	"datetimeFormat_2",
	function(value, element) {
		var check = false;
		if(value.match(/^(\d{1,2})\-(\d{1,2})\-(\d{4}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/)){
			var bdata = value.split(' ');
			var cdata = bdata[1].split(':');
			var timeformat = true;
			if(parseInt(cdata[0],10) < 0 || parseInt(cdata[0],10) > 23){
				timeformat = false;
			}
			if(parseInt(cdata[1],10) < 0 || parseInt(cdata[1],10) > 59){
				timeformat = false;
			}
			if(parseInt(cdata[2],10) < 0 || parseInt(cdata[2],10) > 59){
				timeformat = false;
			}
			var adata = bdata[0].split('/');
			var dd = parseInt(adata[0],10);
			var mm = parseInt(adata[1],10);
			var yyyy = parseInt(adata[2],10);
			var xdata = new Date(yyyy,mm-1,dd);
			if ( ( xdata.getFullYear() === yyyy ) && ( xdata.getMonth () === mm - 1 ) && ( xdata.getDate() === dd ) && timeformat) {
				check = true;
			}else {
				check = false;
			}
		} else {
			check = false;
		}
		return this.optional(element) || check;
	},
	"Wrong datetime format"
);
jQuery.validator.addMethod(
	"datetimeFormat_3",
	function(value, element) {
		var check = false;
		if(value.match(/^(\d{1,2})\/(\d{1,2})\/(\d{4}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/)){
			var bdata = value.split(' ');
			var cdata = bdata[1].split(':');
			var timeformat = true;
			if(parseInt(cdata[0],10) < 0 || parseInt(cdata[0],10) > 23){
				timeformat = false;
			}
			if(parseInt(cdata[1],10) < 0 || parseInt(cdata[1],10) > 59){
				timeformat = false;
			}
			if(parseInt(cdata[2],10) < 0 || parseInt(cdata[2],10) > 59){
				timeformat = false;
			}
			var adata = bdata[0].split('/');
			var dd = parseInt(adata[1],10);
			var mm = parseInt(adata[0],10);
			var yyyy = parseInt(adata[2],10);
			var xdata = new Date(yyyy,mm-1,dd);
			if ( ( xdata.getFullYear() === yyyy ) && ( xdata.getMonth () === mm - 1 ) && ( xdata.getDate() === dd ) && timeformat) {
				check = true;
			}else {
				check = false;
			}
		} else {
			check = false;
		}
		return this.optional(element) || check;
	},
	"Wrong datetime format"
);
jQuery.validator.addMethod(
	"datetimeFormat_4",
	function(value, element) {
		var check = false;
		if(value.match(/^(\d{1,2})\-(\d{1,2})\-(\d{4}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/)){
			var bdata = value.split(' ');
			var cdata = bdata[1].split(':');
			var timeformat = true;
			if(parseInt(cdata[0],10) < 0 || parseInt(cdata[0],10) > 23){
				timeformat = false;
			}
			if(parseInt(cdata[1],10) < 0 || parseInt(cdata[1],10) > 59){
				timeformat = false;
			}
			if(parseInt(cdata[2],10) < 0 || parseInt(cdata[2],10) > 59){
				timeformat = false;
			}
			var adata = bdata[0].split('/');
			var dd = parseInt(adata[1],10);
			var mm = parseInt(adata[0],10);
			var yyyy = parseInt(adata[2],10);
			var xdata = new Date(yyyy,mm-1,dd);
			if ( ( xdata.getFullYear() === yyyy ) && ( xdata.getMonth () === mm - 1 ) && ( xdata.getDate() === dd ) && timeformat) {
				check = true;
			}else {
				check = false;
			}
		} else {
			check = false;
		}
		return this.optional(element) || check;
	},
	"Wrong datetime format"
);
jQuery.validator.addMethod(
	"datetimeFormat_5",
	function(value, element) {
		var check = false;
		if(value.match(/^(\d{4})\/(\d{1,2})\/(\d{1,2}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/)){
			var bdata = value.split(' ');
			var cdata = bdata[1].split(':');
			var timeformat = true;
			if(parseInt(cdata[0],10) < 0 || parseInt(cdata[0],10) > 23){
				timeformat = false;
			}
			if(parseInt(cdata[1],10) < 0 || parseInt(cdata[1],10) > 59){
				timeformat = false;
			}
			if(parseInt(cdata[2],10) < 0 || parseInt(cdata[2],10) > 59){
				timeformat = false;
			}
			var adata = bdata[0].split('/');
			var dd = parseInt(adata[2],10);
			var mm = parseInt(adata[1],10);
			var yyyy = parseInt(adata[0],10);
			var xdata = new Date(yyyy,mm-1,dd);
			if ( ( xdata.getFullYear() === yyyy ) && ( xdata.getMonth () === mm - 1 ) && ( xdata.getDate() === dd ) && timeformat) {
				check = true;
			}else {
				check = false;
			}
		} else {
			check = false;
		}
		return this.optional(element) || check;
	},
	"Wrong datetime format"
);
jQuery.validator.addMethod(
	"datetimeFormat_6",
	function(value, element) {
		var check = false;
		if(value.match(/^(\d{4})\-(\d{1,2})\-(\d{1,2}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/)){
			var bdata = value.split(' ');
			var cdata = bdata[1].split(':');
			var timeformat = true;
			if(parseInt(cdata[0],10) < 0 || parseInt(cdata[0],10) > 23){
				timeformat = false;
			}
			if(parseInt(cdata[1],10) < 0 || parseInt(cdata[1],10) > 59){
				timeformat = false;
			}
			if(parseInt(cdata[2],10) < 0 || parseInt(cdata[2],10) > 59){
				timeformat = false;
			}
			var adata = bdata[0].split('/');
			var dd = parseInt(adata[2],10);
			var mm = parseInt(adata[1],10);
			var yyyy = parseInt(adata[0],10);
			var xdata = new Date(yyyy,mm-1,dd);
			if ( ( xdata.getFullYear() === yyyy ) && ( xdata.getMonth () === mm - 1 ) && ( xdata.getDate() === dd ) && timeformat) {
				check = true;
			}else {
				check = false;
			}
		} else {
			check = false;
		}
		return this.optional(element) || check;
	},
	"Wrong datetime format"
);